apiVersion: v2
name: cockpit
description: A Cockpit Helm chart for Kubernetes
long_description: |
  Cockpit is a headless CMS with an API-first approach that puts content first. It is designed to simplify the process of publication by separating content management from content consumption on the client side.

  Cockpit is focusing just on the back-end work to manage content. Rather than worry about delivery of content through pages, its goal is to provide structured content across different channels via a simple API.

  Key features:
   - Manage flexible content models. There are no pre-defined content models. Define the content model yourself.
   - Uncluttered UI. Cockpit offers you a modern and simple user interface.
   - One system, consume it the way you want. Receive your content via a simple API.

  The Advantages Of Going Headless
   - No presentation limitations – build the best design ever.
   - Content for multiple channels – create content once, consume anywhere.
   - Highly scalable content – for all your devices and microsites.
   - Minimum training required – get started, immediately.
   - Easy integrations – connect with everything.

  ## Installation
  Temporary instructions:
  ```bash
  # pull the chart
  git clone https://github.com/beasteers/cockpit.git
  git checkout k8s-helm

  # overwrite with custom values (optional)
  cp ./cockpit/charts/cockpit/values.yml ./cockpit.values.yml

  helm install cockpit ./cockpit/charts/cockpit -f ./cockpit.values.yml
  ```
  Eventually, we should have something like `helm repo add cockpit.github.io/helm`

  ## Uninstalling
  ```bash
  helm uninstall cockpit
  ```

# A chart can be either an 'application' or a 'library' chart.
#
# Application charts are a collection of templates that can be packaged into versioned archives
# to be deployed.
#
# Library charts provide useful utilities or functions for the chart developer. They're included as
# a dependency of application charts to inject those utilities and functions into the rendering
# pipeline. Library charts do not define any templates and therefore cannot be deployed.
type: application

# This is the chart version. This version number should be incremented each time you make changes
# to the chart and its templates, including the app version.
# Versions are expected to follow Semantic Versioning (https://semver.org/)
version: 0.1.0

# This is the version number of the application being deployed. This version number should be
# incremented each time you make changes to the application. Versions are not expected to
# follow Semantic Versioning. They should reflect the version the application is using.
appVersion: 0.11.2
